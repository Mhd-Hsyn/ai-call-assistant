version: "3.8"

services:
  web:
    build: .
    container_name: ai_call_assistant_api
    ports:
      - "8010:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - mongo
      - redis-server
      - rabbitmq
    restart: always
    networks:
      - ai_call_assistant_saas_backend_network

  mongo:
    image: mongo:6.0
    container_name: mongo_db
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongo_data:/data/db
    restart: always
    networks:
      - ai_call_assistant_saas_backend_network

  redis-server:
    image: redis:latest
    container_name: redis_ai_call_assistant
    ports:
      - "6370:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - ai_call_assistant_saas_backend_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_ai_call_assistant
    ports:
      - "5679:5672"     # RabbitMQ AMQP
      - "15679:15672"   # RabbitMQ Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: always
    networks:
      - ai_call_assistant_saas_backend_network

volumes:
  redis_data:
  rabbitmq_data:
  mongo_data:

networks:
  ai_call_assistant_saas_backend_network:
    external: true
